services:
  postgres:
    image: postgis/postgis:15-3.4
    container_name: circa-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: circa
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
      tags:
        - circa-backend-dev
    container_name: circa-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/circa
      JWT_SECRET: ${JWT_SECRET:-supersecret-dev-only}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      CLOUDFLARE_ACCOUNT_ID: ${CLOUDFLARE_ACCOUNT_ID}
      CLOUDFLARE_R2_BUCKET: ${CLOUDFLARE_R2_BUCKET:-circa}
      CLOUDFLARE_R2_ACCESS_KEY_ID: ${CLOUDFLARE_R2_ACCESS_KEY_ID}
      CLOUDFLARE_R2_ACCESS_KEY_SECRET: ${CLOUDFLARE_R2_ACCESS_KEY_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3333:3333"
    # volumes:
    #   - ./apps/backend/src:/app/apps/backend/src
    #   - ./apps/backend/prisma:/app/apps/backend/prisma
    #   - /app/apps/backend/node_modules
    #   - /app/apps/backend/dist

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
      tags:
        - circa-frontend-dev
    container_name: circa-frontend-dev
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3333}
    ports:
      - "3000:3000"
    # volumes:
    #   - ./apps/frontend:/app/apps/frontend
    #   - /app/node_modules

volumes:
  postgres-data:
